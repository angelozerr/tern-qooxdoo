{"attributes": {"fullName": "qx.lang.Array", "packageName": "qx.lang", "isStatic": true, "type": "bootstrap", "name": "Array"}, "type": "class", "children": [{"attributes": {"text": "<p>Static helper functions for arrays with a lot of often used convenience\nmethods like <code>remove</code> or <code>contains</code>.</p>\n\n<p>The native JavaScript Array is not modified by this class. However,\nthere are modifications to the native Array in {@link qx.lang.normalize.Array} for\nbrowsers that do not support certain JavaScript features natively .</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 280, "isStatic": true, "name": "append"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr1"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "arr2"}, "type": "param", "children": [{"attributes": {"text": "<p>the elements of this array will be appended to other one</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Append the elements of an array to the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The modified array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>if one of the arguments is not an array</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 64, "isStatic": true, "name": "cast"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>any array-like object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "constructor"}, "type": "param", "children": [{"attributes": {"text": "<p>constructor of the new instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "optional": true, "name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>position to start from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts an array like object to any other array like\nobject.</p>\n\n<p>Attention: The returned array may be same\ninstance as the incoming one if the constructor is identical!</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the converted array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 182, "isStatic": true, "name": "clone"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array to copy</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return a copy of the given array</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>copy of the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 352, "isStatic": true, "name": "contains"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>object to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the array contains the given element</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the arr contains the element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 365, "isStatic": true, "name": "equals"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr1"}, "type": "param", "children": [{"attributes": {"text": "<p>first array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "arr2"}, "type": "param", "children": [{"attributes": {"text": "<p>second array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the two arrays have the same content. Checks only the\nequality of the arrays&#8217; content.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the two arrays are equal</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 304, "isStatic": true, "name": "exclude"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr1"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "arr2"}, "type": "param", "children": [{"attributes": {"text": "<p>the elements of this array will be excluded from the other one</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Modifies the first array as it removes all elements\nwhich are listed in the second array as well.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The modified array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>if one of the arguments is not an array</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 112, "isStatic": true, "name": "fromArguments"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>arguments object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "optional": true, "name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>position to start from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert an arguments object into an array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a newly created array (copy) with the content of the arguments object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 123, "isStatic": true, "name": "fromCollection"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "coll"}, "type": "param", "children": [{"attributes": {"text": "<p>node collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert a (node) collection into an array</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a newly created array (copy) with the content of the node collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 151, "isStatic": true, "name": "fromShortHand"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "input"}, "type": "param", "children": [{"attributes": {"text": "<p>arr with one to four elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Expand shorthand definition to a four element list.\nThis is an utility function for padding/margin and all other shorthand handling.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>an arr with four elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 233, "isStatic": true, "name": "insertAfter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be inserted</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "obj2"}, "type": "param", "children": [{"attributes": {"text": "<p>insert obj1 after this object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element into the array after a given second element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 195, "isStatic": true, "name": "insertAt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>the element to insert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "i"}, "type": "param", "children": [{"attributes": {"text": "<p>position where to insert the element into the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element at a given position into the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 211, "isStatic": true, "name": "insertBefore"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be inserted</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "obj2"}, "type": "param", "children": [{"attributes": {"text": "<p>insert obj1 before this object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element into the array before a given second element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 411, "isStatic": true, "name": "max"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Array to process</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the highest value in the given array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The highest of all values or undefined if array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 437, "isStatic": true, "name": "min"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Array to process</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the lowest value in the given array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The lowest of all values or undefined if array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 333, "isStatic": true, "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>element to be removed from the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove an element from the array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the removed element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 265, "isStatic": true, "name": "removeAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove all elements from the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>empty array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 254, "isStatic": true, "name": "removeAt"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "i"}, "type": "param", "children": [{"attributes": {"text": "<p>index of the element to be removed</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove an element from the array at the given index</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The removed element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 391, "isStatic": true, "name": "sum"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Array to process</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the sum of all values in the given array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The sum of all values.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 466, "isStatic": true, "name": "unique"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Incoming array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Recreates an array which is free of all duplicate elements from the original.</p>\n\n<p>This method does not modify the original array!</p>\n\n<p>Keep in mind that this methods deletes undefined indexes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a copy with no duplicates</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}]}]}